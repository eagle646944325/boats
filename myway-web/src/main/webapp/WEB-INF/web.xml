<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  <!--初始化日志配置文件logback -->
  <context-param>
    <param-name>logbackConfigLocation</param-name>
    <param-value>classpath:config/logback.xml</param-value>
  </context-param>
  <listener>
    <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
  </listener>
  <!-- 加载spring配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:config/spring*.xml</param-value>
  </context-param>
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>web.root</param-value>
  </context-param>
  <!-- ContextLoaderListener会读取自定义路径classpath*:config/spring*.xml下的XML文件并产生 WebApplicationContext对象，
     并利用这个对象访问spring 容器管理的bean -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--  Spring MVC过滤器-字符集过滤器（CharacterEncodingFilter）,用于处理项目中的乱码问题 -->
  <filter>
    <filter-name>SpringEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>SpringEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- 防止脚本注入，防止xss攻击 -->
  <filter>
    <filter-name>XssEscape</filter-name>
    <filter-class>cn.gelk.filter.XssFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>XssEscape</filter-name>
    <url-pattern>/rest/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  <!-- ETag过滤器,节省带宽 -->
  <filter>
    <filter-name>etagFilter</filter-name>
    <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>etagFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
  </filter-mapping>
  <!-- 支持method为put的表单方式提交，并将之传递到Controller中标注了method为RequestMethod.put的方法中 -->
  <filter>
    <filter-name>HttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HttpMethodFilter</filter-name>
    <url-pattern>/rest/*</url-pattern>
  </filter-mapping>
  <!-- springMVC核心配置 -->
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:config/spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  <!-- 首页设置  -->
  <welcome-file-list>
    <welcome-file>/pages/index.html</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>404</error-code>
    <location>/pages/errorpage/error404.html</location>
  </error-page>
  <error-page>
    <error-code>405</error-code>
    <location>/pages/errorpage/error405.html</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/pages/errorpage/error500.html</location>
  </error-page>
  <!-- 设置session 过期时间  -->
  <session-config>
    <session-timeout>3600</session-timeout>
  </session-config>
</web-app>
