<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.gelk</groupId>
  <artifactId>myway</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>myway-utils</module>
    <!--<module>myway-domain</module>-->
    <module>myway-dao</module>
    <module>myway-service</module>
    <module>myway-web</module>
  </modules>
  <packaging>pom</packaging>
  <name>myway</name>
  <url>http://maven.apache.org</url>
  <properties>
    <maven.compiler.plugin.version>3.6.2</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>2.20</maven.surefire.plugin.version>
    <maven.war.plugin.version>3.1.0</maven.war.plugin.version>
    <!-- 自动生成mybatis xml以及对应接口插件 版本号 -->
    <mybatis.generator.version>1.3.5</mybatis.generator.version>
    <!-- JDK版本号 -->
    <jdk.version>1.8</jdk.version>
    <!-- 项目编译文件的指定字符集 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- javax.servlet 版本号-->
    <javax.servlet.api.version>4.0.0</javax.servlet.api.version>
    <!-- spring版本号 -->
    <spring.version>4.3.10.RELEASE</spring.version>
    <!-- spring aop 所依赖的jar包 版本号-->
    <aspectj.version>1.8.10</aspectj.version>
    <!-- Quartz 版本 -->
    <quartz.version>2.3.0</quartz.version>
    <!-- mybatis版本号 -->
    <mybatis.version>3.4.5</mybatis.version>
    <mybatis.spring.version>1.3.1</mybatis.spring.version>
    <!-- log4j版本号 -->
    <slf4j.version>1.7.21</slf4j.version>
    <log4j.core.version>1.2.3</log4j.core.version>
    <!-- JSTL版本号 -->
    <jstl.version>1.2</jstl.version>
    <standard.version>1.1.2</standard.version>
    <!-- junit版本号-->
    <junit.version>4.12</junit.version>
    <!-- 阿里巴巴数据源 包 版本号 -->
    <com.alibaba.version>1.0.29</com.alibaba.version>
    <!-- 阿里巴巴JSON操作 包 版本号 -->
    <com.alibaba.fastjson.version>1.2.29</com.alibaba.fastjson.version>
    <!-- mysql 驱动包 版本号-->
    <mysql.connector.java.version>5.1.39</mysql.connector.java.version>
    <!-- JSON支持的包 版本号 -->
    <jackson.core.version>2.8.7</jackson.core.version>
    <!-- poi包 -->
    <poi.version>3.16</poi.version>
    <!-- 生成javadoc文档包的插件版本号 -->
    <maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>
    <!-- 生成sources源码包的插件版本号 -->
    <maven.source.plugin>3.0.1</maven.source.plugin>
    <!-- logback 版本号 -->
    <logback.classic>1.2.3</logback.classic>
    <logback.ext.spring>0.1.4</logback.ext.spring>
    <janino.version>3.0.7</janino.version>
    <!-- 通用mapper 版本号-->
    <tk.mybatis.version>3.4.3</tk.mybatis.version>
    <pagehelper.version>5.0.4</pagehelper.version>
    <!-- commons io 相关的包 版本号-->
    <commons.lang3.version>3.4</commons.lang3.version>
    <commons.fileupload.version>1.3.2</commons.fileupload.version>
    <commons.io.version>2.5</commons.io.version>
    <!-- httpClient 版本号 -->
    <httpclient.version>4.5.3</httpclient.version>
    <!-- cglib 版本号 -->
    <cglib.version>3.2.5</cglib.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet.api.version}</version>
    </dependency>
    <!--JSTL依赖的jar包 start-->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>${standard.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <!-- JSTL依赖的jar包 end -->
    <!-- spring核心包 -->
    <!-- springframe start -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- springframe end -->
    <!-- AspectJ springAOP所依赖的包 begin-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <!-- AspectJ springAOP所依赖的包 end-->
    <!-- Quartz begin -->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz-jobs</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <!-- Quartz end -->
    <!-- mybatis 配置 start -->
    <!-- mybatis核心包  -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <!-- mybatis/spring包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis.spring.version}</version>
    </dependency>
    <!-- mysql驱动包 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.connector.java.version}</version>
    </dependency>
    <!-- 通用mapper 避免写mybatis的xml内容 -->
    <dependency>
      <groupId>tk.mybatis</groupId>
      <artifactId>mapper</artifactId>
      <version>${tk.mybatis.version}</version>
    </dependency>
    <!-- mybatis 分页插件 -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>${pagehelper.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-maven-plugin</artifactId>
      <version>${mybatis.generator.version}</version>
    </dependency>
    <!-- junit测试包 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!--commons io相关 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons.fileupload.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <!-- httpClient 包 -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <!-- 阿里巴巴数据源 包 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${com.alibaba.version}</version>
    </dependency>
    <!-- mybatis 配置 end -->
    <!-- json数据  start-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${com.alibaba.fastjson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.core.version}</version>
    </dependency>
    <!-- json数据  end-->
    <!-- 日志文件管理包 集成slf4j-logback start -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${log4j.core.version}</version>
    </dependency>
    <!--logback-classic包含了logback本身所需的slf4j-api.jar、logback-core.jar及logback-classsic.jar -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.classic}</version>
    </dependency>
    <!-- jcl-over-slf4j是用来把Spring源代码中大量使用到的commons-logging替换成slf4j，
         只有在添加了这个依赖之后才能看到Spring框架本身打印的日志，否则只能看到开发者自己打印的日志 -->
    <dependency>
      <groupId>org.logback-extensions</groupId>
      <artifactId>logback-ext-spring</artifactId>
      <version>${logback.ext.spring}</version>
    </dependency>
    <!-- logback 要使用到的过滤器 EvaluatorFilter 所需的jar包 -->
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>${janino.version}</version>
    </dependency>
    <!-- 日志文件管理包 集成slf4j-logback end -->
    <!-- POI excel导出 begin-->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${poi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi.version}</version>
    </dependency>
    <!-- POI excel导出 end-->
    <!-- 动态代理工具cglib begin -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>${cglib.version}</version>
    </dependency>
    <!-- 动态代理工具cglib end -->

  </dependencies>
  <!-- 相关资源文件配置 -->
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <env>dev</env>
      </properties>
      <activation>
        <!-- 如果maven在build时不指定profile值时默认选择该目录下的配置文件 -->
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <env>test</env>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
  </profiles>
  <build>
    <finalName>myway</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>config/dev/*</exclude>
          <exclude>config/prod/*</exclude>
          <exclude>config/test/*</exclude>
<!--          <exclude>config/jdbc.properties</exclude>
          <exclude>config/logback.xml</exclude>-->
        </excludes>
        <targetPath>.</targetPath>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources/config/${env}</directory>
        <targetPath>config</targetPath>
        <filtering>true</filtering>
      </resource>
    </resources>
    <!--将原来${env}.properties,${env}.xml文件替换成指定profile='test/dev/prod'文件夹下名称相同的文件-->
    <!--<filters>-->
      <!--<filter>config/${jdbc}.properties</filter>-->
      <!--<filter>config/${logback}.xml</filter>-->
    <!--</filters>-->
    <plugins>
      <!-- 设置JDK编译版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${jdk.version}</source><!-- 源代码使用的开发版本 -->
          <target>${jdk.version}</target><!-- 需要生成的目标class文件的编译版本 -->
          <encoding>UTF-8</encoding>
        </configuration>
        <version>${maven.compiler.plugin.version}</version>
      </plugin>
      <!-- maven编译的时候跳过Test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
      <!--在Maven打包war的时候包含空目录/空文件夹-->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war.plugin.version}</version>
        <configuration>
          <includeEmptyDirectories>true</includeEmptyDirectories>
        </configuration>
      </plugin>
      <!-- 生成javadoc文档包的插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <aggregate>true</aggregate>
          <additionalparam>-Xdoclint:none</additionalparam>
          <charset>UTF-8</charset>
          <encoding>UTF-8</encoding>
          <docencoding>UTF-8</docencoding>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- 生成sources源码包的插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin}</version>
        <configuration>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>